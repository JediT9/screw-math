-(g*mhead*friction_coefficient*math.cos(ramp_angle)*(math.sin(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))*x_velocity*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2))) + math.cos(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))*x_distance*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))*((y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2))) + math.sin(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))*x_distance*(((-2*y_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*y_velocity**2*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)) - (2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration)/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (((2*y_velocity**3)/(x_velocity**2 + y_velocity**2)**2 - (2*y_velocity)/(x_velocity**2 + y_velocity**2))*(y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/(2*(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2)) + (((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**2 + (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))*((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2))))/(2*(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2))**(3/2)) - ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_acceleration - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*y_acceleration)/math.sqrt(x_velocity**2 + y_velocity**2) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(x_velocity**2 + y_velocity**2)**(3/2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/((x_velocity**2 + y_velocity**2)**2*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))) + (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)) + (3*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(4*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(5/2)) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2))))) - g*mhead*friction_coefficient*math.cos(ramp_angle)*(ahead*math.cos(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)) - phi_distance)*phi_velocity*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2))) - ahead*math.sin(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)) - phi_distance)*phi_distance*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))*(-phi_velocity + (y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2))) + ahead*math.cos(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)) - phi_distance)*phi_distance*(((-2*y_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*y_velocity**2*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)) - (2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration)/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (((2*y_velocity**3)/(x_velocity**2 + y_velocity**2)**2 - (2*y_velocity)/(x_velocity**2 + y_velocity**2))*(y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/(2*(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2)) + (((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**2 + (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))*((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2))))/(2*(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2))**(3/2)) - ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_acceleration - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*y_acceleration)/math.sqrt(x_velocity**2 + y_velocity**2) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(x_velocity**2 + y_velocity**2)**(3/2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/((x_velocity**2 + y_velocity**2)**2*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))) + (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)) + (3*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(4*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(5/2)) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))) - g*mhead*friction_coefficient*math.cos(ramp_angle)*(-math.sin(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2))) - math.cos(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))*y_velocity*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2))) - math.sin(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))*y_distance*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))*(-((y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))) + ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2))) + math.cos(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))*y_distance*(-(((-2*y_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*y_velocity**2*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)) - (2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration)/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))) + (((2*y_velocity**3)/(x_velocity**2 + y_velocity**2)**2 - (2*y_velocity)/(x_velocity**2 + y_velocity**2))*(y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/(2*(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2)) - (((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**2 + (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))*((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2))))/(2*(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2))**(3/2)) + ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_acceleration - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*y_acceleration)/math.sqrt(x_velocity**2 + y_velocity**2) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(x_velocity**2 + y_velocity**2)**(3/2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/((x_velocity**2 + y_velocity**2)**2*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))) + (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)) + (3*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(4*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(5/2)) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))) - g*mhead*friction_coefficient*math.cos(ramp_angle)*(-(bhead*math.cos(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)) - phi_distance)*psi_velocity*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))) - bhead*math.sin(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)) - phi_distance)*psi_distance*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))*(phi_velocity - (y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) + ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2))) + bhead*math.cos(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)) - phi_distance)*psi_distance*(-(((-2*y_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*y_velocity**2*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)) - (2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration)/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))) + (((2*y_velocity**3)/(x_velocity**2 + y_velocity**2)**2 - (2*y_velocity)/(x_velocity**2 + y_velocity**2))*(y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/(2*(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2)) - (((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**2 + (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))*((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2))))/(2*(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2))**(3/2)) + ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_acceleration - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*y_acceleration)/math.sqrt(x_velocity**2 + y_velocity**2) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(x_velocity**2 + y_velocity**2)**(3/2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/((x_velocity**2 + y_velocity**2)**2*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))) + (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_acceleration) + bhead*psi_acceleration))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)) + (3*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(4*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(5/2)) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_acceleration) + bhead*psi_acceleration) + 2*(-(ahead*phi_velocity) + bhead*psi_velocity)*(-(ahead*phi_acceleration) + bhead*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(-(ahead*phi_velocity) + bhead*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(-(ahead*phi_velocity) + bhead*psi_velocity) + (-(ahead*phi_velocity) + bhead*psi_velocity)**2)))) - g*mtail*friction_coefficient*math.cos(ramp_angle)*(math.sin(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))*x_velocity*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2))) + math.cos(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))*x_distance*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))*((y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_acceleration + btail*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2))) + math.sin(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))*x_distance*(((-2*y_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*y_velocity**2*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)) - (2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration)/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (((2*y_velocity**3)/(x_velocity**2 + y_velocity**2)**2 - (2*y_velocity)/(x_velocity**2 + y_velocity**2))*(y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/(2*(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2)) + (((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**2 + (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)**2)/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))*((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_acceleration + btail*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2))))/(2*(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2))**(3/2)) - ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(atail*phi_acceleration + btail*psi_acceleration))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_acceleration + btail*psi_acceleration))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_acceleration - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*y_acceleration)/math.sqrt(x_velocity**2 + y_velocity**2) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(x_velocity**2 + y_velocity**2)**(3/2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/((x_velocity**2 + y_velocity**2)**2*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))) + (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_acceleration + btail*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_acceleration + btail*psi_acceleration))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)) + (3*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(4*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(5/2)) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))) - g*mtail*friction_coefficient*math.cos(ramp_angle)*(-math.sin(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2))) - math.cos(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))*y_velocity*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2))) - math.sin(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))*y_distance*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))*(-((y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))) + ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_acceleration + btail*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2))) + math.cos(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))*y_distance*(-(((-2*y_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*y_velocity**2*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)) - (2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration)/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))) + (((2*y_velocity**3)/(x_velocity**2 + y_velocity**2)**2 - (2*y_velocity)/(x_velocity**2 + y_velocity**2))*(y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/(2*(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2)) - (((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**2 + (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)**2)/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))*((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_acceleration + btail*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2))))/(2*(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2))**(3/2)) + ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(atail*phi_acceleration + btail*psi_acceleration))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_acceleration + btail*psi_acceleration))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_acceleration - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*y_acceleration)/math.sqrt(x_velocity**2 + y_velocity**2) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(x_velocity**2 + y_velocity**2)**(3/2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/((x_velocity**2 + y_velocity**2)**2*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))) + (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_acceleration + btail*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_acceleration + btail*psi_acceleration))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)) + (3*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(4*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(5/2)) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))) - g*mtail*friction_coefficient*math.cos(ramp_angle)*(-(atail*math.cos(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)) - phi_distance)*phi_velocity*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))) - atail*math.sin(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)) - phi_distance)*phi_distance*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))*(phi_velocity - (y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) + ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_acceleration + btail*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2))) + atail*math.cos(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)) - phi_distance)*phi_distance*(-(((-2*y_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*y_velocity**2*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)) - (2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration)/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))) + (((2*y_velocity**3)/(x_velocity**2 + y_velocity**2)**2 - (2*y_velocity)/(x_velocity**2 + y_velocity**2))*(y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/(2*(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2)) - (((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**2 + (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)**2)/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))*((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_acceleration + btail*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2))))/(2*(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2))**(3/2)) + ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(atail*phi_acceleration + btail*psi_acceleration))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_acceleration + btail*psi_acceleration))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_acceleration - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*y_acceleration)/math.sqrt(x_velocity**2 + y_velocity**2) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(x_velocity**2 + y_velocity**2)**(3/2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/((x_velocity**2 + y_velocity**2)**2*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))) + (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_acceleration + btail*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_acceleration + btail*psi_acceleration))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)) + (3*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(4*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(5/2)) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))) - g*mtail*friction_coefficient*math.cos(ramp_angle)*(-(btail*math.cos(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)) - phi_distance)*psi_velocity*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))) - btail*math.sin(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)) - phi_distance)*psi_distance*((-(y_velocity**2/(x_velocity**2 + y_velocity**2)**(3/2)) + 1/math.sqrt(x_velocity**2 + y_velocity**2))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) - (-1/2*(math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))*(phi_velocity - (y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2)) + ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_acceleration + btail*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2))) + btail*math.cos(math.asin(y_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - math.asin((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)) - phi_distance)*psi_distance*(-(((-2*y_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*y_velocity**2*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)) - (2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration)/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))) + (((2*y_velocity**3)/(x_velocity**2 + y_velocity**2)**2 - (2*y_velocity)/(x_velocity**2 + y_velocity**2))*(y_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/(2*(1 - y_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2)) - (((math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**2 + (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)**2)/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)))*((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_acceleration + btail*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2))))/(2*(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2))**(3/2)) + ((math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))))/math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)) + (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(atail*phi_acceleration + btail*psi_acceleration))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)) - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_acceleration + btail*psi_acceleration))/((x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*math.sqrt(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_acceleration - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*y_acceleration)/math.sqrt(x_velocity**2 + y_velocity**2) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(x_velocity**2 + y_velocity**2)**(3/2) - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/((x_velocity**2 + y_velocity**2)**2*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*((-((y_velocity*x_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2)) - (x_velocity*y_acceleration)/(x_velocity**2 + y_velocity**2)**(3/2) + (3*x_velocity*y_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(5/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)) - (x_velocity**2*y_velocity*(x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2))))/((x_velocity**2 + y_velocity**2)**2*(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))**(3/2))) + (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_acceleration + btail*psi_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_acceleration + btail*psi_acceleration))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2)))))/(2*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)) + (3*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*y_velocity - (2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*y_velocity*(atail*phi_velocity + btail*psi_velocity))/math.sqrt(x_velocity**2 + y_velocity**2) - (2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity))/((x_velocity**2 + y_velocity**2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))))*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(4*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(5/2)) + (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*x_velocity*y_velocity*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration - (math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*(atail*phi_velocity + btail*psi_velocity)*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/math.sqrt(x_velocity**2 + y_velocity**2) + 2*math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity)*(-phi_velocity + (x_acceleration/math.sqrt(x_velocity**2 + y_velocity**2) - (x_velocity*(2*x_velocity*x_acceleration + 2*y_velocity*y_acceleration))/(2*(x_velocity**2 + y_velocity**2)**(3/2)))/math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))) - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_acceleration + btail*psi_acceleration) + 2*(atail*phi_velocity + btail*psi_velocity)*(atail*phi_acceleration + btail*psi_acceleration)))/(2*(x_velocity**2 + y_velocity**2)**(3/2)*math.sqrt(1 - x_velocity**2/(x_velocity**2 + y_velocity**2))*(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2)**(3/2)))/math.sqrt(1 - (math.sin(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)**2*(atail*phi_velocity + btail*psi_velocity)**2)/(x_velocity**2 + y_velocity**2 - 2*math.cos(math.asin(x_velocity/math.sqrt(x_velocity**2 + y_velocity**2)) - phi_distance)*math.sqrt(x_velocity**2 + y_velocity**2)*(atail*phi_velocity + btail*psi_velocity) + (atail*phi_velocity + btail*psi_velocity)**2))))